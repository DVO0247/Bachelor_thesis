services:
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - ./app_data/influxdb:/var/lib/influxdb
    env_file:
      - .env
    environment:
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    networks:
      - data_centre
    user: "0"
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./app_data/grafana:/var/lib/grafana
    env_file:
      - .env
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_AUTH_ANONYMOUS_ORG_NAME=${GRAFANA_ORG_NAME}
    networks:
      - data_centre
    user: "0"
    restart: always

  control_center:
    build:
      dockerfile: ./Dockerfile.django_web
    container_name: control_center
    ports:
      - "80:80"
    volumes:
      - ./app_data:/app_data
    depends_on:
      - influxdb
      - grafana
    env_file:
      - .env
    networks:
      - data_centre
    command: >
      sh -c "wait-for-it.sh grafana:3000 --
             wait-for-it.sh influxdb:8086 --
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py createadmin &&
             gunicorn core.wsgi:application --bind 0.0.0.0:80"
    restart: always

  receiver_server:
    build:
      dockerfile: Dockerfile.receiver_server
    container_name: receiver_server
    ports:
      - "5123:5123"
    volumes:
      - ./app_data:/app_data
    depends_on:
      - influxdb
      - control_center
    env_file:
      - .env
    networks:
      - data_centre
    command: >
      sh -c "wait-for-it.sh control_center:80 -- python main.py"
    restart: always

networks:
  data_centre:
    driver: bridge

volumes:
  app_data:
